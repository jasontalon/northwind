version: "3"
services:
  postgres:
    image: postgres:12-alpine
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
      - backups:/backups
    ports:
      - "5432"
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - default
    labels:
      - "traefik.enable=false"
  graphql-engine:
    image: hasura/graphql-engine:latest
    ports:
      - "5433:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: ${HASURA_GRAPHQL_ENABLED_LOG_TYPES}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_AUTH_HOOK: ${HASURA_GRAPHQL_AUTH_HOOK}
      HASURA_GRAPHQL_AUTH_HOOK_MODE: ${HASURA_GRAPHQL_AUTH_HOOK_MODE}    
    networks:
      - default
      - proxy
  api:
    build: ./api
    ports:
      - "5434:${API_PORT}"
    volumes:
      - ./api/dist:/api/dist
    restart: unless-stopped
    environment:
      GQL_URL: ${API_GQL_URL}
      GQL_SECRET: ${API_GQL_SECRET}
      JWT_SECRET: ${API_JWT_SECRET}
      PORT: ${API_PORT}
    command: ["npm", "run", "start:prod"] #debug mode
    networks:
      - default
  web:
    build: ./web
    ports:
      - "3003:${WEB_PORT}"
    restart: unless-stopped
    depends_on: 
      - "api"
      - "graphql-engine"
    environment: 
      HOST: ${WEB_HOST}
      PORT: ${WEB_PORT}
      HASURA_URL: ${WEB_HASURA_URL}
      API_URL: ${WEB_API_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.northwind_web.rule=Host(`${PROXY_WEB_HOST}`)"   
    networks:
      - default
      - proxy
volumes:
  db_data:
  backups:
networks:
  default:
  proxy:
    external:
        name: proxy    
